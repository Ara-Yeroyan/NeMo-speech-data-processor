processors_to_run: "12:"
workspace_dir: /mnt/md0/common_crawl/cc_sdp/en_fr

processors:
  - _target_: sdp.processors.datasets.commoncrawl.PreserveByValue
    input_manifest_file: /mnt/md0/common_crawl/cc_sdp/manifest8ps.json
    output_manifest_file: ${workspace_dir}/manifest0.json
    input_field: audio_lang
    target_value: en

  - _target_: sdp.processors.datasets.commoncrawl.PreserveByValue
    output_manifest_file: ${workspace_dir}/manifest1.json
    input_field: text_lang
    target_value: fr
  
  - _target_: sdp.processors.ASRInference
    output_manifest_file: ${workspace_dir}/manifest2.json
    pretrained_model: nvidia/stt_en_fastconformer_hybrid_large_pc
    batch_size: 64

  - _target_: sdp.processors.DuplicateFields
    output_manifest_file: ${workspace_dir}/manifest3.json
    duplicate_fields: {"text":"orig_text"}

  - _target_: sdp.processors.RenameFields
    output_manifest_file: ${workspace_dir}/manifest4.json
    rename_fields: {"pred_text": "asr_text"}

  - _target_: sdp.processors.DropIfRegexMatch
    output_manifest_file: ${workspace_dir}/manifest5.json
    text_key: asr_text
    regex_patterns:
      - "^\\s*$"

  - _target_: sdp.processors.datasets.commoncrawl.NmtSubprocess
    output_manifest_file: ${workspace_dir}/manifest6.json
    arg_separator: "="
    srctext_file: ${workspace_dir}/srctext.txt # --srctext=${workspace_dir}/srctext.txt
    tgtout_file: ${workspace_dir}/tgtout.txt # --tgtout=${workspace_dir}/tgtout.txt
    input_field: "asr_text"
    output_field: "pred_text"
    cmd: "python /home/nkarpov/workspace/NeMo/examples/nlp/machine_translation/nmt_transformer_infer.py \
        --model=${workspace_dir}/nmt_en_fr_transformer12x2.nemo --target_lang=fr --source_lang=en"

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest7.json
    regex_params_list:
      - {"pattern": '\[(.*?)\]', "repl": ' '}
      - {"pattern": "^[\\s]*\\*(.*?)\\*[\\s]*$", "repl": "\\1"}
      - {"pattern": '‚', "repl": ","}
      - {"pattern": "’", "repl": "'"}
      - {"pattern": "[-–—]", "repl": " "}
      - {"pattern": '―', "repl": "-"}
      - {"pattern": '—', "repl": "-"}
      - {"pattern": '⁺', "repl": "+"}
      - {"pattern": '“', "repl": '"'}
      - {"pattern": '”', "repl": '"'}
      - {"pattern": '…', "repl": '.'}
      - {"pattern": '‘', "repl": "'"}
      - {"pattern": '′', "repl": "'"}
      - {"pattern": '`', "repl": "'"}
      - {"pattern": '⁻', "repl": "-"}
      - {"pattern": '‑', "repl": "-"}
      - {"pattern": '¶', "repl": ' '}
      - {"pattern": '«', "repl": '"'}
      - {"pattern": '»', "repl": '"'}
      - {"pattern": '„', "repl": '"'}
      - {"pattern": '®', "repl": ' '}
      - {"pattern": '@', "repl": " "}
      # - {"pattern": "%", "repl": " "}
      - {"pattern": "  ", "repl": " "}

  - _target_: sdp.processors.DropHighLowWordrate
    output_manifest_file: ${workspace_dir}/manifest8.json
    high_wordrate_threshold: 100
    low_wordrate_threshold: 0.01

  # - _target_: sdp.processors.datasets.commoncrawl.Subprocess
  #   # input_manifest_file: ${workspace_dir}/manifest7.json
  #   output_manifest_file: ${workspace_dir}/manifest10.json
  #   input_manifest_arg: "--manifest"
  #   output_manifest_arg: "--output_filename"
  #   arg_separator: "="
  #   cmd: "python /home/nkarpov/workspace/NeMo-text-processing/nemo_text_processing/text_normalization/normalize_with_audio.py \
  #       --language=fr --n_jobs=-1 --batch_size=600 --manifest_text_field=text --cache_dir=${workspace_dir}/cache --overwrite_cache \
  #       --whitelist=/home/nkarpov/workspace/NeMo-text-processing/nemo_text_processing/text_normalization/fr/data/whitelist.tsv"

  - _target_: sdp.processors.SubRegex
    output_manifest_file: ${workspace_dir}/manifest9.json
    text_key: text
    regex_params_list:
      - {"pattern": "^\\s*'+\\s(.*?)\\s*'+\\s*$", "repl": "\\1"}
      - {"pattern": "^\\s*'*\\s*", "repl": ""}
      - {"pattern": "'{2,}", "repl": "'"}
      - {"pattern": '\\.{3}', "repl": '.'}
      - {"pattern": '\$', "repl": ""}
      - {"pattern": "[^a-zA-ZàâçéèêëîïôûùüÿñæœÀÂÇÉÈÊËÎÏÔÛÙÜŸÑÆŒ.,?'-]", "repl": " "}
      - {"pattern": '  ', "repl": " "}

  
  - _target_: sdp.processors.datasets.commoncrawl.BLEUScore
    output_manifest_file: ${workspace_dir}/manifest10.json
    ref_field: text
    hyp_field: pred_text
    output_field: bleu

  - _target_: sdp.processors.datasets.commoncrawl.UseSonar
    output_manifest_file: ${workspace_dir}/manifest11.json
    input_text_field: text
    input_audio_field: audio_filepath
    output_field: sonar_dist
    device: cuda
    speech_encoder_model: sonar_speech_encoder_eng
    text_encoder_model: text_sonar_basic_encoder
    text_encoder_lang: fra_Latn
    batch_size: 64

  - _target_: sdp.processors.datasets.commoncrawl.PreserveByValue
    output_manifest_file: ${workspace_dir}/manifest12.json
    input_field: bleu
    target_value: 30
    operator: ge
